# based on https://github.com/vegasbrianc/prometheus

version: '2'

services:
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data


  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    restart: always
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro


  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
      - cadvisor


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus


  postgres:
    image: postgres:9.6
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data


  postgres-commander:
    image: fenglc/pgadmin4
    container_name: postgres-commander
    restart: always
    ports:
      - 5050:5050
    environment:
      DEFAULT_USER: admin
      DEFAULT_PASSWORD: admin
    links:
      - postgres:postgres


  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data


  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    ports:
      - 8081:8081
    environment:
      REDIS_HOSTS: local:redis:6379
    links:
      - redis:redis


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181

  zookeeper-rest:
    image: elkozmon/zoonavigator-api:latest
    container_name: zoonavigator-rest
    restart: always
    links:
     - zookeeper:zookeeper

  zookeeper-web:
    image: elkozmon/zoonavigator-web:latest
    container_name: zookeeper-web
    restart: always
    ports:
     - 8001:8000
    environment:
      API_HOST: zookeeper-rest
    links:
     - zookeeper-rest:zookeeper-rest
    depends_on:
     - zookeeper-rest


  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/kafka
    links:
      - zookeeper:zookeeper

  kafka-rest:
    image: confluentinc/cp-kafka-rest
    container_name: kafka-rest
    environment:
      ACCESS_CONTROL_ALLOW_ORIGIN_DEFAULT: "*"
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_HOST_NAME: kafka-rest
    links:
      - zookeeper:zookeeper


  kafka-topics-ui:
    image: landoop/kafka-topics-ui
    container_name: kafka-topics-ui
    ports:
      - 8000:8000
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest:8082
      PROXY: "true"
    links:
      - kafka-rest:kafka-rest


#  cassandra:
#    image: cassandra:latest
#    container_name: cassandra
#    restart: always
#    mem_limit: 4g
#    environment:
#      MAX_HEAP_SIZE: 2g
#      HEAP_NEWSIZE: 2g
#    ports:
#      - 9042:9042
#    volumes:
#      - cassandra_data:/var/lib/cassandra
 
volumes:
  portainer_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  redis_data:
  cassandra_data:
  kafka_data: